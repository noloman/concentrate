apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "manulorenzo.me.kittentrate"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix ".mock"
        }
        prod {

        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'FLICKR_API_KEY', keystoreProperties['FlickrApiKey']
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:recyclerview-v7:$androidSupportLibraryVersion"
    compile "com.android.support:cardview-v7:$androidSupportLibraryVersion"
    compile "com.android.support:appcompat-v7:$androidSupportLibraryVersion"
    compile "com.android.support:design:$androidSupportLibraryVersion"
    compile "com.android.support:support-v4:$androidSupportLibraryVersion"
    compile "com.android.support:design:$androidSupportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$androidSupportLibraryVersion"

    compile "com.github.bumptech.glide:glide:$glideVersion"
    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    testCompile "junit:junit:$jUnitVersion"

    compile "com.google.code.gson:gson:$gsonVersion"
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$squareLoggingInterceptorVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"

    testCompile "org.mockito:mockito-core:$mockitoVersion"
    releaseCompile "com.google.firebase:firebase-crash:$firebaseVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$androidSupportLibraryVersion"
            }
        }
    }
}
apply plugin: 'com.google.gms.google-services'
